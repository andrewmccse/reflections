What happens when you initialize a repository? Why do you need to do it?

	You create the foundation for git. You create a new git repository to start
	adding commits. There are no commits when you first initialize the repository.
	You need to add them yourself.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is the step before adding a commit to the working directory.
	to make before you do it. I think it serves as a way to double check that you
	have the correct files grouped together that you want to add to a single commit.
	Also, if there wasn't this intermediate step, there would need to be another way
	to determine how you want to add multiple file to the same commit.

How can you use the staging area to make sure you have one commit per logical
change?

	Even if you made multiple logical changes across multple files, you can use
	the staging area to only add the files with the same locigal change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When trying out experimental features or creating multiple end versions of
	a particular software. Ex: paid version vs free version?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?